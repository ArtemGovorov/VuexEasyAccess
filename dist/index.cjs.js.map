{"version":3,"file":"index.cjs.js","sources":["../src/objectDeepValueUtils.js","../src/storeAccess.js","../src/defaultConfig.js","../src/index.js"],"sourcesContent":["import { isArray } from 'is-what'\n\n/**\n * Returns the keys of a path\n *\n * @param   {string} path   a/path/like.this\n * @returns {array} with keys\n */\nfunction getKeysFromPath (path) {\n  if (!path) return []\n  return path.match(/\\w+/g)\n}\n\n/**\n * Gets a deep property in an object, based on a path to that property\n *\n * @param {object} target an object to wherefrom to retrieve the deep reference of\n * @param {string} path   'path/to.prop'\n *\n * @returns {object} the property which was requested\n */\nfunction getDeepRef (target = {}, path) {\n  let keys = getKeysFromPath(path)\n  if (!keys.length) return target\n  let obj = target\n  while (obj && keys.length > 1) {\n    obj = obj[keys.shift()]\n  }\n  let key = keys.shift()\n  if (obj && obj.hasOwnProperty(key)) {\n    return obj[key]\n  }\n}\n\n/**\n * Gets a deep property in an object, based on a path to that property\n *\n * @param   {object} target   the Object to get the value of\n * @param   {string} path     'path/to/prop.subprop'\n *\n * @returns {object}          the property's value\n */\nfunction getDeepValue (target, path) {\n  return getDeepRef(target, path)\n}\n\n/**\n * Sets a value to a deep property in an object, based on a path to that property\n *\n * @param   {object} target   the Object to set the value on\n * @param   {string} path     'path/to/prop.subprop'\n * @param   {*}      value    the value to set\n *\n * @returns {object}          the original target object\n */\nfunction setDeepValue (target, path, value) {\n  const keys = getKeysFromPath(path)\n  const lastKey = keys.pop()\n  const deepRef = getDeepRef(target, keys.join())\n  if (deepRef && deepRef.hasOwnProperty(lastKey)) {\n    deepRef[lastKey] = value\n  }\n  return target\n}\n\n/**\n * Pops a value of an array which is a deep property in an object, based on a path to that property\n *\n * @param   {object} target   the Object to set the value on\n * @param   {string} path     'path.to.sub.prop'\n *\n * @returns {*}               the popped value\n */\nfunction popDeepValue (target, path) {\n  const deepRef = getDeepRef(target, path)\n  if (!isArray(deepRef)) return\n  return deepRef.pop()\n}\n/**\n * Pushes a value in an array which is a deep property in an object, based on a path to that property\n *\n * @param   {object} target   the Object to set the value on\n * @param   {string} path     'path/to.sub.prop'\n * @param   {*}      value    the value to set\n *\n * @returns {number}          the new length of the array\n */\nfunction pushDeepValue (target, path, value) {\n  const deepRef = getDeepRef(target, path)\n  if (!isArray(deepRef)) return\n  return deepRef.push(value)\n}\n/**\n * Splice into an array which is a deep property in an object, based on a path to that property\n *\n * @param   {object} target       the Object to set the value on\n * @param   {string} path         'path/to.sub.prop'\n * @param   {*}      value        the value to splice in\n * @param   {number} index        the index to splice in the value, defaults to 0\n * @param   {number} deleteCount  the amount of items to delete, defaults to 0\n *\n * @returns {array}              an array containing the deleted elements\n */\nfunction spliceDeepValue (target, path, index = 0, deleteCount = 0, value) {\n  const deepRef = getDeepRef(target, path)\n  if (!isArray(deepRef)) return\n  return deepRef.splice(index, deleteCount, value)\n}\n\nexport { getDeepRef, getKeysFromPath, setDeepValue, getDeepValue, popDeepValue, pushDeepValue, spliceDeepValue }\n","/**\n * Vuex Easy Access plugin\n * Unified syntax with simple set() and get() store access + auto generate mutations!\n *\n * @author     Luca Ban\n * @contact    https://lucaban.com\n */\n\nimport { setDeepValue, getDeepValue, popDeepValue, pushDeepValue, spliceDeepValue } from './objectDeepValueUtils'\nimport { isObject, isArray } from 'is-what'\n\n/**\n * Creates the mutations for each property of the object passed recursively\n *\n * @param   {object} propParent an Object of which all props will get a mutation\n * @param   {string} path       the path taken until the current propParent instance\n *\n * @returns {object}            all mutations for each property.\n */\nfunction makeMutationsForAllProps(propParent, path) {\n  if (!isObject(propParent)) return {}\n  return Object.keys(propParent)\n  .reduce((mutations, prop) => {\n    let propPath = (!path)\n      ? prop\n      : path + '.' + prop\n    let name = 'SET_' + propPath.toUpperCase()\n    mutations[name] = (state, newVal) => {\n      return setDeepValue(state, propPath, newVal)\n    }\n    let propValue = propParent[prop]\n    // If the prop is an object, make the children setters as well\n    if (isObject(propValue)) {\n      let childrenMutations = makeMutationsForAllProps(propValue, propPath)\n      mutations = {...mutations, ...childrenMutations}\n    }\n    // If the prop is an array, make array mutations as well\n    if (isArray(propValue)) {\n      let pop = 'POP_' + propPath.toUpperCase()\n      mutations[pop] = (state) => {\n        return popDeepValue(state, propPath)\n      }\n      let push = 'PUSH_' + propPath.toUpperCase()\n      mutations[push] = (state, value) => {\n        return pushDeepValue(state, propPath, value)\n      }\n      let splice = 'SPLICE_' + propPath.toUpperCase()\n      mutations[splice] = (state, index, deleteCount, value) => {\n        return spliceDeepValue(state, propPath, index, deleteCount, value)\n      }\n    }\n    return mutations\n  }, {})\n}\n\n/**\n * Creates all mutations for the state of a module.\n * Usage:\n * commit('module/path/SET_PATH.TO.PROP', newValue)\n * Import method:\n * mutations {\n *   ...defaultMutations (initialState)\n * }\n *\n * @param   {object} initialState   the initial state of a module\n *\n * @returns {object}                all mutations for the state\n */\nfunction defaultMutations (initialState) {\n  return makeMutationsForAllProps(initialState)\n}\n\n/**\n * Creates a setter function in the store to set any state value\n * Usage:\n * `set('module/path/path.to.prop', newValue)`\n * it will check first for existence of: `dispatch('module/path/setPath.to.prop')`\n * if non existant it will execute: `commit('module/path/SET_PATH.TO.PROP', newValue)`\n * Import method:\n * `store.set = (path, payload) => { return defaultSetter(path, payload, store) }`\n *\n * @param   {string}   path     the path of the prop to set eg. 'info/user/favColours.primary'\n * @param   {*}        payload  the payload to set the prop to\n * @param   {object}   store    the store to attach\n *\n * @returns {function}          dispatch or commit\n */\nfunction defaultSetter (path, payload, store, vuexEasyFirestore) {\n  // path = 'info/user/favColours.primary'\n  const pArr = path.split('/')\n  // ['info', 'user', 'favColours.primary']\n  const props = pArr.pop()\n  // 'favColours.primary'\n  const modulePath = (pArr.length)\n    ? pArr.join('/') + '/'\n    : ''\n  // 'info/user/'\n  const actionName = 'set' + props[0].toUpperCase() + props.substring(1)\n  // 'setFavColours.primary'\n  const actionPath = modulePath + actionName\n  // 'info/user/setFavColours.primary'\n  const actionExists = store._actions[actionPath]\n  if (actionExists) {\n    return store.dispatch(actionPath, payload)\n  }\n  if (vuexEasyFirestore) {\n    // 'info/user/set', {favColours: {primary: payload}}'\n    const pathIsModule = store._modulesNamespaceMap[path + '/']\n    const firestoreActionPath = (pathIsModule)\n      ? path + '/set'\n      : modulePath + 'set'\n    const newPayload = (pathIsModule)\n      ? payload\n      : {}\n    if (!pathIsModule) newPayload[props] = payload\n    const firestoreActionExists = store._actions[firestoreActionPath]\n    if (firestoreActionExists) {\n      return store.dispatch(firestoreActionPath, newPayload)\n    }\n  }\n  const mutationPath = modulePath + 'SET_' + props.toUpperCase()\n  return store.commit(mutationPath, payload)\n}\n\n/**\n * Creates a getter function in the store to set any state value\n * Usage:\n * `get('module/path/path.to.prop')`\n * it will check first for existence of: `getters['module/path/path.to.prop']`\n * if non existant it will return: `state.module.path.path.to.prop`\n * Import method:\n * `store.get = (path) => { return defaultGetter(path, store) }`\n *\n * @param   {string}   path     the path of the prop to get eg. 'info/user/favColours.primary'\n * @param   {object}   store    the store to attach\n *\n * @returns {function}          getter or state\n */\nfunction defaultGetter (path, store) {\n  const getterExists = store.getters.hasOwnProperty(path)\n  if (getterExists) return store.getters[path]\n  return getDeepValue(store.state, path)\n}\n\nexport { defaultMutations, defaultSetter, defaultGetter }\n","\nexport default {\n  setter: 'set',\n  getter: 'get',\n  vuexEasyFirestore: false\n}\n","/**\n * Vuex Easy Access plugin\n * Unified syntax with simple set() and get() store access + auto generate mutations!\n *\n * @author     Luca Ban\n * @contact    https://lucaban.com\n */\n\nimport { defaultMutations, defaultSetter, defaultGetter } from './storeAccess'\nimport defaultConfig from './defaultConfig'\nimport { getDeepRef, getKeysFromPath } from './objectDeepValueUtils'\n\nfunction createEasyAccess (userConfig) {\n  const conf = Object.assign(defaultConfig, userConfig)\n  const vuexEasyFirestore = conf.vuexEasyFirestore\n  return store => {\n    store[conf.setter] = (path, payload) => { return defaultSetter(path, payload, store, vuexEasyFirestore) }\n    store[conf.getter] = (path) => { return defaultGetter(path, store) }\n  }\n}\n\nexport default createEasyAccess\nexport { createEasyAccess, defaultMutations, defaultSetter, defaultGetter, getDeepRef, getKeysFromPath }\n"],"names":["getKeysFromPath","path","match","getDeepRef","target","keys","length","obj","shift","key","hasOwnProperty","getDeepValue","setDeepValue","value","lastKey","pop","deepRef","join","popDeepValue","isArray","pushDeepValue","push","spliceDeepValue","index","deleteCount","splice","makeMutationsForAllProps","propParent","isObject","Object","reduce","mutations","prop","propPath","name","toUpperCase","state","newVal","propValue","childrenMutations","defaultMutations","initialState","defaultSetter","payload","store","vuexEasyFirestore","pArr","split","props","modulePath","actionName","substring","actionPath","actionExists","_actions","dispatch","pathIsModule","_modulesNamespaceMap","firestoreActionPath","newPayload","firestoreActionExists","mutationPath","commit","defaultGetter","getterExists","getters","createEasyAccess","userConfig","conf","assign","defaultConfig","setter","getter"],"mappings":"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"}